/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.nearinfinity.blur.thrift.generated;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * Specifies the type of Row mutation that should occur during
 * a mutation of a given Row.
 */
public enum RowMutationType implements org.apache.thrift.TEnum {
  /**
   * Indicates that the entire Row is to be deleted.
   */
  DELETE_ROW(0),
  /**
   * Indicates that the entire Row is to be deleted, and then a new
   * Row with the same id is to be added.
   */
  REPLACE_ROW(1),
  /**
   * Indicates that mutations of the underlying Records will be
   * processed individually.
   */
  UPDATE_ROW(2);

  private final int value;

  private RowMutationType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static RowMutationType findByValue(int value) { 
    switch (value) {
      case 0:
        return DELETE_ROW;
      case 1:
        return REPLACE_ROW;
      case 2:
        return UPDATE_ROW;
      default:
        return null;
    }
  }
}
